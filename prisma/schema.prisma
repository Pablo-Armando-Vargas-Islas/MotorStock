// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  user     String @unique
  password String
  role     Role   @default(SEGUROS)
}

enum Role {
  SEGUROS
  GASTOS
  CONTADOR
}

model Vehiculo {
  id            Int     @id @default(autoincrement())
  placa         String  @unique
  marca         String
  tipo          String
  color         String
  modelo        Int
  serie         String  @unique
  motor         String?
  proyecto      String?
  ubicacion     String?
  placaAnterior String?
  comentario    String?

  // Relaciones
  seguros  Seguro[]
  gastos   Gasto[]
  facturas Factura[]

  // Index
  @@index([placa])
  @@index([serie])
  @@index([proyecto])
}

// seguro -> gastos | gastos -> contador

model Seguro {
  id               Int            @id @default(autoincrement())
  vehiculoId       Int
  compania         CompaniaSeguro
  precio           Float
  fechaInicio      DateTime
  fechaVencimiento DateTime
  responsable      String?

  // Relaciones
  vehiculo Vehiculo @relation(fields: [vehiculoId], references: [id])
}

enum CompaniaSeguro {
  GM
  RF
  HM
}

model Gasto {
  id            Int      @id @default(autoincrement())
  folio         String   @unique
  fecha         DateTime
  razonSocial   String // RZ en el Excel
  banco         String?
  tdc           String? // Tarjeta de cr√©dito
  proveedor     String
  concepto      String
  referencia    String?
  documento     String?
  proyecto      String?
  responsable   String
  transferencia String?
  entrada       Float?
  salida        Float?
  saldo         Float?
  vehiculoId    Int?

  // Relaciones
  vehiculo Vehiculo? @relation(fields: [vehiculoId], references: [id])
  facturas Factura[]

  // Index
  @@index([folio])
  @@index([proveedor])
  @@index([responsable])
}

model Factura {
  id                      Int       @id @default(autoincrement())
  uuid                    String?   @unique
  estadoSAT               String?   @default("Vigente")
  tipoComprobante         String?   @default("I")
  tipo                    String?   @default("Factura")
  fechaEmision            DateTime
  serie                   String?
  folio                   String?
  rfcEmisor               String
  nombreEmisor            String
  rfcReceptor             String
  nombreReceptor          String
  usoCFDI                 String
  subTotal                Float
  descuento               Float?    @default(0)
  totalIEPS               Float?    @default(0)
  iva16                   Float?    @default(0)
  retenidoIVA             Float?    @default(0)
  retenidoISR             Float?    @default(0)
  ish                     Float?    @default(0)
  total                   Float
  moneda                  String?   @default("MXN")
  tipoCambio              Float?    @default(1)
  formaPago               String
  metodoPago              String
  conceptos               String
  regimenFiscalReceptor   String?
  domicilioFiscalReceptor String?
  fechaPago               DateTime?
  bancoPago               String?
  folioPago               String?
  gastoId                 Int?

  // Relaciones
  gasto      Gasto?    @relation(fields: [gastoId], references: [id])
  vehiculo   Vehiculo? @relation(fields: [vehiculoId], references: [id])
  vehiculoId Int?

  // Index
  @@index([folio])
  @@index([rfcEmisor])
  @@index([nombreEmisor])
  @@index([fechaEmision])
}
