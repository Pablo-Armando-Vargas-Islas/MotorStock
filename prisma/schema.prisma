generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  REGISTRO_GASTOS
  SEGUROS
  CONSULTA
  CONTADOR
  ADMIN
  AUDITOR
}

enum Compania {
  GM
  HM
  RC
}

model User {
  id               String     @id @default(uuid())
  user             String     @unique
  password         String
  role             Role       @default(REGISTRO_GASTOS)
  canViewSeguros   Boolean    @default(false)
  canViewGastos    Boolean    @default(true)
  canViewFacturas  Boolean    @default(false)
  canEditSeguros   Boolean    @default(false)
  canEditGastos    Boolean    @default(false)
  canEditFacturas  Boolean    @default(false)
  canManageUsers   Boolean    @default(false)
  allowedCompanies Compania[] @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Vehiculo {
  id        String  @id @default(uuid())
  placa     String  @unique
  marca     String
  tipo      String
  modelo    Int
  serie     String
  motor     String?
  ubicacion String?
  proyecto  String?

  versionActual Int      @default(1)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  versiones VersionVehiculo[]
  seguros   Seguro[]
  gastos    Gasto[]
}

model VersionVehiculo {
  id         Int      @id @default(autoincrement())
  vehiculo   Vehiculo @relation(fields: [vehiculoId], references: [id])
  vehiculoId String

  placa         String
  placaAnterior String?
  marca         String
  tipo          String
  modelo        Int
  serie         String
  motor         String?
  ubicacion     String?
  proyecto      String?

  version     Int
  fechaCambio DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([vehiculoId, version])
  @@index([vehiculoId])
}

model Seguro {
  id         Int      @id @default(autoincrement())
  vehiculo   Vehiculo @relation(fields: [vehiculoId], references: [id])
  vehiculoId String

  compania         Compania
  precio           Float
  fechaInicio      DateTime
  fechaVencimiento DateTime
  comentario       String?

  versionActual Int      @default(1)
  createdAt     DateTime @default(now())

  @@index([vehiculoId])
}

model Gasto {
  id         Int      @id @default(autoincrement())
  folio      String
  vehiculo   Vehiculo @relation(fields: [vehiculoId], references: [id])
  vehiculoId String

  fecha         DateTime
  razonSocial   String
  banco         String?
  tdc           String?
  proveedor     String
  concepto      String
  referencia    String?
  documento     String?
  proyecto      String?
  responsable   String
  transferencia Float?
  entrada       Float?
  salida        Float?
  saldo         Float?

  versionActual Int      @default(1)
  createdAt     DateTime @default(now())

  facturas Factura[]

  @@index([vehiculoId])
}

model Factura {
  id      Int   @id @default(autoincrement())
  gasto   Gasto @relation(fields: [gastoId], references: [id])
  gastoId Int

  uuid                    String?
  estadoSAT               String?
  tipoComprobante         String?
  tipo                    String?
  fechaEmision            DateTime
  serie                   String?
  rfcEmisor               String
  nombreEmisor            String
  rfcReceptor             String
  nombreReceptor          String
  usoCFDI                 String
  subTotal                Float
  descuento               Float?    @default(0)
  totalIEPS               Float?    @default(0)
  iva16                   Float?    @default(0)
  retenidoIVA             Float?    @default(0)
  retenidoISR             Float?    @default(0)
  ish                     Float?    @default(0)
  total                   Float
  moneda                  String?   @default("MXN")
  tipoCambio              Float?    @default(0)
  formaPago               String
  metodoPago              String
  conceptos               String
  regimenFiscalReceptor   String?
  domicilioFiscalReceptor String?
  fechaPago               DateTime?
  bancoPago               String?
  folioPago               String?

  versionActual Int      @default(1)
  createdAt     DateTime @default(now())

  @@index([gastoId])
}
